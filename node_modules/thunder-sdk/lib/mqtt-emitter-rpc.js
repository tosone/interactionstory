'use strict';

const debuglog = require('util').debuglog('thunder');

module.exports = function (opts, replyTopics, callback) {
  var { topic, payload, emitter, related } = opts;

  replyTopics.forEach( replyTopic => emitter.on(replyTopic, isReplyRelated) );
  emitter.publish(topic, JSON.stringify(payload));

  return { cancel: clean };

  function isReplyRelated(payload, params, topic, topicPattern) {
    var obj = payloadToObject(payload);
    if (related(obj, params, topic, topicPattern)) {
      clean();
      callback(null, obj, params, topic, topicPattern);
    }
  }

  function payloadToObject(payload) {
    try {
      return JSON.parse(payload.toString());
    } catch (err) {
      if (payload.length > 0) {
        debuglog('can\'t parse payload: %j', payload);
      }
      return null;
    }
  }

  function clean() {
    replyTopics.forEach( replyTopic => emitter.removeListener(replyTopic, isReplyRelated) );
  }
};

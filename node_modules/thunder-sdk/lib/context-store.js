'use strict';

const ContextError = require('./exceptions').ContextError;

const debuglog = require('util').debuglog('thunder');


class ContextStore {

  constructor() {
    this.store = {};
  }

  clean(appId) {
    this.store[appId] = undefined;
    debuglog('clean context store: %j', this.store);
  }

  push(appId, context) {
    var appStore = this.store[appId];
    if (!appStore) {
      appStore = [];
      this.store[appId] = appStore;
    }
    appStore.push(context);
    debuglog('push context store: %j', this.store);
  }

  pop(appId) {
    try {
      var appStore = this.store[appId];
      var context = appStore.pop();
      debuglog('pop context store: %j', this.store);
      return context;
    } catch (err) {
      throw new ContextError();
    }
  }

  peek(appId) {
    try {
      var appStore = this.store[appId];
      var context = appStore[appStore.length - 1];
      debuglog('query context store: %j', this.store);
      return context;
    } catch (err) {
      throw new ContextError();
    }
  }
}

module.exports = ContextStore;

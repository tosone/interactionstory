const thunder = require('..');
const assert = require('assert');



describe('app outer behavior', function () {

  describe('app election', function () {

    var app = thunder.app('test');

    app.registerAction('unr/unr');

    before(function () {
      app.mount();
    });

    after(function () {
      app.unmount();
    });

    it('should success', function (done) {
      thunder.mqttEmitter.on('life_cycle/intent_handled', function handled(payload) {
        var o = JSON.parse(payload);
        assert(o.appId === 'test');
        thunder.mqttEmitter.removeListener('life_cycle/intent_handled', handled);
        done();
      });
      thunder.mqttEmitter.publish('intent/unr/unr/election');
    });

  });

  describe('app halflock', function () {

    var app = thunder.app('test');

    app.registerAction('unr/unr');

    before(function () {
      app.mount();
    });

    after(function () {
      app.unmount();
    });

    it('should success', function (done) {

      app.post('start');

      app.halfLockPush2Talk(function() {

      });

      thunder.mqttEmitter.on('life_cycle/intent_handled', function handled(payload) {
        var o = JSON.parse(payload);
        assert(o.appId === 'test');
        thunder.mqttEmitter.removeListener('life_cycle/intent_handled', handled);
        done();
      });
      thunder.mqttEmitter.publish('intent/unr/unr/election');
    });

  });

});
